#!/bin/sh
# Exit if no files are staged for commit
FILES=$(git diff --cached --name-only --diff-filter=ACMR | sed 's| |\\ |g')
[ -z "$FILES" ] && exit 0

# Prettify all selected files
echo "$FILES" | xargs ./node_modules/.bin/prettier --ignore-unknown --write

echo -e "\nValidating Javascript & Typescript with eslint:"

STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E "\.jsx{0,1}$|\.tsx{0,1}$")
if [ -n "$STAGED_FILES" ]; then
  # Run ESLint and capture the output
  ESLINT_OUTPUT=$(echo "$STAGED_FILES" | xargs ./node_modules/.bin/eslint --fix --format json)
  
  # Check if there are any errors
  if echo "$ESLINT_OUTPUT" | grep -q '"errorCount": [1-9]'; then
    echo -e "ESLint found errors, aborting commit."
    echo "$ESLINT_OUTPUT" | ./node_modules/.bin/eslint-formatter-friendly
    exit 1
  else
    echo -e "ESLint validation completed successfully."
  fi
fi

# Validate TypeScript compilation
echo -e "\nValidating TypeScript compilation:"
./node_modules/.bin/tsc --noEmit
if [ $? -ne 0 ]; then
  echo -e "TypeScript compilation failed, aborting commit."
  exit 1
else
  echo -e "TypeScript compilation completed successfully."
fi

# Add back the modified/prettified files to staging
echo "$FILES" | xargs git add
echo "$STAGED_FILES" | xargs git add

exit 0
