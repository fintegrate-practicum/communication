#!/bin/sh
# npm test

# Get list of files staged for commit
FILES=$(git diff-index --cached --name-only --diff-filter=ACM | sed 's| |\\ |g')
[ -z "$FILES" ] && exit 0

# Run Prettier on staged files
echo "$FILES" | xargs ./node_modules/.bin/prettier --ignore-unknown --write

# Validate JavaScript & TypeScript with ESLint
STAGED_FILES=$(echo "$FILES" | grep -E "\.jsx?$|\.tsx?$|\.js$|\.ts$")
if [ -n "$STAGED_FILES" ]; then
  ESLINT_OUTPUT=$(echo "$STAGED_FILES" | xargs ./node_modules/.bin/eslint --fix --format json)

  if echo "$ESLINT_OUTPUT" | grep -q '"errorCount": [1-9]'; then
    echo -e "ESLint found errors, aborting commit."
    echo "$ESLINT_OUTPUT" | ./node_modules/.bin/eslint-formatter-friendly
    exit 1
  else
    echo -e "ESLint validation completed successfully."
  fi
fi

# Validate TypeScript compilation and JavaScript syntax
TS_FILES=$(echo "$STAGED_FILES" | grep -E "\.tsx?$|\.ts$|\.jsx?$|\.js$")
if [ -n "$TS_FILES" ]; then
  ./node_modules/.bin/tsc --noEmit $TS_FILES
  if [ $? -ne 0 ]; then
    echo -e "JavaScript & TypeScript compilation failed, aborting commit."
    exit 1
  else
    echo -e "JavaScript & TypeScript compilation completed successfully."
  fi
fi

# Add back the modified/prettified files to staging
echo "$FILES" | xargs git add
echo "$STAGED_FILES" | xargs git add

exit 0
